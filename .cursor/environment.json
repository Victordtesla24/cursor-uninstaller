{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  "user": "node",
  "install": ".cursor/install.sh",
  "start": "echo 'Background agent environment started.' && if [ -d \"/.dockerenv\" ] || [ -f \"/.dockerenv\" ] || grep -q docker /proc/1/cgroup 2>/dev/null; then echo 'Running inside Docker, no need to start Docker service'; else if command -v docker &> /dev/null; then if [[ \"$(uname)\" == \"Darwin\" ]]; then echo 'On macOS, please ensure Docker Desktop is running'; else if sudo -n true 2>/dev/null; then sudo service docker start || sudo systemctl start docker || echo 'Docker service could not be started'; else echo 'Docker service might need manual starting with sudo privileges'; fi; fi; fi; fi && bash .cursor/github-setup.sh && source .cursor/load-env.sh",
  "environments": {
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}",
    "GITHUB_REPO_URL": "https://github.com/Victordtesla24/cursor-uninstaller.git",
    "NODE_ENV": "development"
  },
  "terminals": [
    {
      "name": "dashboard_dev_server",
      
      "command": "cd ui/dashboard && npm run dev -- --host --no-open",
      "description": "Runs the UI dashboard development server. Access it via the port Vite announces (usually 3000 or 5173 if 3000 is taken)."
    },
    {
      "name": "git_status",
      "command": "git config --list && echo '----- Repository Status -----' && git status && echo '----- Branches -----' && git branch -a",
      "description": "Displays git configuration and repository status for debugging purposes."
    },
    {
      "name": "log_monitor",
      "command": "tail -f .cursor/logs/agent.log",
      "description": "Monitors the background agent log file for debugging."
    },
    {
      "name": "github_setup",
      "command": "bash .cursor/github-setup.sh",
      "description": "Runs the GitHub setup script to configure Git for the Background Agent."
    }
  ],
  "tasks": {
    "setup_github": {
      "command": "bash .cursor/github-setup.sh",
      "description": "Sets up GitHub authentication for the Background Agent."
    },
    "git_push": {
      "command": "git push",
      "description": "Pushes changes to the remote repository."
    },
    "git_pull": {
      "command": "git pull",
      "description": "Pulls changes from the remote repository."
    }
  }
}
